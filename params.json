{
    "name": "Pixel. Run. by Namics AG",
    "tagline": "Mirror from the Namics AG internal repository of the Pixel. Run. game.",
    "body": "## About\r\n\r\n#### Master Version (OFFA)\r\nThe latest release for demonstration or showcases is located\r\nin the branch <code>[master](https://git.namics.com/jan.biasi/pixel-run/tree/master)</code>\r\n\r\n#### Standalone Version (Tilemap Editing)\r\nThe standalone version is located in the branch <code>[creator](https://git.namics.com/jan.biasi/pixel-run/tree/creator)</code>\r\n\r\n#### Online Version (pixelrun.namics.com)\r\nThe online version with more content and deployment environement is located\r\nin the branch <code>[online](https://git.namics.com/jan.biasi/pixel-run/tree/online)</code>\r\n\r\n#### Documentations\r\nAll documents related to this program/game are located in the branch\r\n<code>[docs](https://git.namics.com/jan.biasi/pixel-run/tree/docs)</code>\r\n\r\n## Build Process\r\n\r\n#### Gulp\r\nA build can be triggered over your systems CLI like the launch command above. There are several tasks avaible (listed below), but if you want to re-build the whole application, simpy run the <code>gulp</code> command, and everything is done.\r\n\r\n> To apply settings changed, you have to **rebuild the application**, simply rund the default <code>gulp</code> command to do this.\r\n\r\n    gulp # run whole build\r\n\r\n    # remove builded files, additionally use :app or\r\n    # :dependencies to just remove the related files\r\n    gulp clean:dist\r\n\r\n    # builds the app or dependencies only\r\n    gulp build:app\r\n    gulp build:dependencies\r\n\r\n    # watches the app or dependencies and auto-trigger\r\n    # the right builds on file changes\r\n    gulp watch:app\r\n    gulp watch:dependencies\r\n\r\n###### Plugins\r\n* gulp@^3.9.0\r\n* gulp-concat@^2.6.0\r\n* gulp-cssmin@^0.1.7\r\n* gulp-gzip@^1.2.0\r\n* gulp-header@^1.7.1\r\n* gulp-if@^2.0.0\r\n* gulp-jshint@^2.0.0\r\n* gulp-rename@^1.2.2\r\n* gulp-uglify@^1.5.1\r\n* gulp-zip@^3.1.0\r\n* jshint@^2.9.1\r\n* mocha@^2.4.5\r\n* morgan@^1.6.1\r\n\r\n#### JSHint\r\nThere's a gulp task integrated which helps you to lint the application files under <code>/app</code>. Simply\r\nrun the task <code>lint</code> to validate all the files and generating an output.\r\n\r\n> If there's a warning/info *\"ES5 option is now set per default\"* you can ignore this message\r\nand just keep on reading. This message will be removed in a newer version of JSHint and is generated\r\ndue the <code>esversion</code> in the [.jshintrc](https://github.com/janbiasi/pixel-run/blob/master/.jshintrc) is set to 5 (using ECMAScript 5).\r\n\r\n## Start\r\n\r\nThe game can be started over your systems CLI, the only requirement is, that Node.js 4.+ is installed on your machine. Run the command below and see the magic.\r\n\r\n    npm start\r\n\r\n## Main Dependencies\r\n* Gulp *(NPM)*\r\n* Express *(NPM)*\r\n* Shipit *(NPM)*\r\n* Phaser *(Bower)*\r\n* jQuery *(Bower)*\r\n\r\n\r\n## Phaser States\r\n\r\n#### States\r\nThere are four general states avaible which are used for the game process. The Preload, Boot, Game and Update\r\nstate. Read more about the states in the chapters below.\r\n\r\n##### Boot\r\nThe boot state loads all image, sprites and audio assets in the preload function and\r\nsets the basic [game settings](https://github.com/janbiasi/pixel-run/blob/master/app/provider/settings.js)\r\nin the create method. Define new media elements to get loaded within the [world settings](https://github.com/janbiasi/pixel-run/blob/master/app/provider/settings.js#L55).\r\n\r\n##### Preload\r\nUsed for pregame settings such as the game mode of phaser (Arcade in this case) and background settings ect. Visit the default settings [here](https://github.com/janbiasi/pixel-run/blob/master/app/states/preload.js).\r\n\r\n##### Game\r\nMain game process, uses the [game settings](https://github.com/janbiasi/pixel-run/blob/master/app/provider/settings.js) and\r\nthe utility stuff. If you want to change something in the Jump N Run game itself, you'll have to change it [here](https://github.com/janbiasi/pixel-run/blob/master/app/states/game.js).\r\n\r\n##### Over\r\nThis state will show the resume screen with the highscores. Afterwards it will run the **Sync** state.\r\n\r\n##### Sync\r\nAt least the sync state will synchronize all the player scores to the file <code>/app/data/scores.json</code> via an\r\nAJAX request to <code>HTTP POST /api/save/score</code>.\r\n\r\n### Emergency\r\nSometimes you want to kill all players in the world or even quit the game itself due some\r\nunexpected bugs or lags. But you will loose the player scores if you just reload the browser window (press F5), so it\r\nis **not recommended to reload the page to exit**! There are two methods provided as soon as the game starts,\r\nthey are located under the global <code>Emergency</code> object. Each method has to be confirmed with the yes button before\r\nit will affect your current game.\r\n\r\n#### $killAll\r\nThis method will kill all alive players in your game, e.g. if one player lasts in the game and he hang up in an obstacle on the map\r\nand can't move further, this method will be great to kill him (or just use the one below).\r\n\r\n```js\r\nEmergency.$killAll()\r\n```\r\n\r\n#### $quit\r\nThis method will use the <code>$killAll</code> method and additionally exits the game, saves the scores and display\r\nthe overview like every player would die.\r\n\r\n> You can also use the shortcut keycombination <code>Ctrl + Y</code> to quit the game!\r\n\r\n```js\r\nEmergency.$quit()\r\n```\r\n\r\n## License\r\n[MIT Licensed](LICENSE) by [Namics AG](http://namics.com/).",
    "note": "Don't delete this file! It's used internally to help with page regeneration."
}
